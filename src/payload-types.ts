/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    locations: Location;
    hotels: Hotel;
    'tour-highlights': TourHighlight;
    'tour-themes': TourTheme;
    tours: Tour;
    activities: Activity;
    transports: Transport;
    'tour-itineraries': TourItinerary;
    'hotel-facilities': HotelFacility;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    locations: LocationsSelect<false> | LocationsSelect<true>;
    hotels: HotelsSelect<false> | HotelsSelect<true>;
    'tour-highlights': TourHighlightsSelect<false> | TourHighlightsSelect<true>;
    'tour-themes': TourThemesSelect<false> | TourThemesSelect<true>;
    tours: ToursSelect<false> | ToursSelect<true>;
    activities: ActivitiesSelect<false> | ActivitiesSelect<true>;
    transports: TransportsSelect<false> | TransportsSelect<true>;
    'tour-itineraries': TourItinerariesSelect<false> | TourItinerariesSelect<true>;
    'hotel-facilities': HotelFacilitiesSelect<false> | HotelFacilitiesSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs?: {
    tasks: unknown;
    workflows?: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations".
 */
export interface Location {
  id: number;
  name: string;
  type: 'city' | 'country';
  parent?: (number | null) | Location;
  media?: (number | Media)[] | null;
  thumbnail?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hotels".
 */
export interface Hotel {
  id: number;
  name: string;
  location?: (number | null) | Location;
  address?: string | null;
  description?: string | null;
  category?: ('2-star' | '3-star' | '4-star' | '5-star') | null;
  facilities?:
    | {
        relationTo: 'hotel-facilities';
        value: number | HotelFacility;
      }[]
    | null;
  media?: (number | Media)[] | null;
  thumbnail?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hotel-facilities".
 */
export interface HotelFacility {
  id: number;
  name: string;
  description?: string | null;
  icon?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tour-highlights".
 */
export interface TourHighlight {
  id: number;
  name: string;
  description?: string | null;
  icon?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tour-themes".
 */
export interface TourTheme {
  id: number;
  name: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tours".
 */
export interface Tour {
  id: number;
  name: string;
  customizable?: boolean | null;
  summary?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  themes: (number | TourTheme)[];
  locations: (number | Location)[];
  duration_nights: number;
  visa_included?: boolean | null;
  visa_price?: number | null;
  currency?: ('USD' | 'EUR' | 'GBP' | 'LKR') | null;
  base_price_child: number;
  base_price_adult: number;
  price_range?: string | null;
  availability_start?: string | null;
  availability_end?: string | null;
  flight_included?: boolean | null;
  'tour-highlights'?: (number | TourHighlight)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "activities".
 */
export interface Activity {
  id: number;
  name: string;
  summary?: string | null;
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  location?: (number | null) | Location;
  type?: ('adventure' | 'fun' | 'romantic') | null;
  duration?: number | null;
  suitable_for?: ('kids' | 'adults' | 'elders' | 'infants')[] | null;
  media?: (number | Media)[] | null;
  thumbnail?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transports".
 */
export interface Transport {
  id: number;
  name: string;
  type?: ('luxury' | 'cheap' | 'public_transport') | null;
  media?: (number | Media)[] | null;
  thumbnail?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tour-itineraries".
 */
export interface TourItinerary {
  id: number;
  tour: number | Tour;
  itinerary?:
    | {
        day: '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' | '10';
        name?: string | null;
        description?: string | null;
        events?:
          | (
              | {
                  operator:
                    | 'srilankan_airlines'
                    | 'cinnamon_air'
                    | 'fitsair'
                    | 'helitours'
                    | 'iraqi_airways'
                    | 'kuwait_airways'
                    | 'qatar_airways'
                    | 'saudi_arabian_airlines'
                    | 'singapore_airlines'
                    | 'turkish_airlines';
                  departure_time?: string | null;
                  arrival_time?: string | null;
                  next_day_arrival?: boolean | null;
                  check_baggage_allowance?: number | null;
                  hand_baggage_allowance?: number | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'flight-event';
                }
              | {
                  name?: string | null;
                  description?: string | null;
                  hotel: {
                    relationTo: 'hotels';
                    value: number | Hotel;
                  };
                  type?: ('checkin' | 'checkout') | null;
                  time?: string | null;
                  changeable?: boolean | null;
                  alternatives?:
                    | {
                        relation?: {
                          relationTo: 'hotels';
                          value: number | Hotel;
                        } | null;
                        additional_cost?: number | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'hotel-event';
                }
              | {
                  name?: string | null;
                  description?: string | null;
                  activity: {
                    relationTo: 'activities';
                    value: number | Activity;
                  };
                  time?: string | null;
                  duration?: number | null;
                  changeable?: boolean | null;
                  alternatives?:
                    | {
                        relation?: {
                          relationTo: 'activities';
                          value: number | Activity;
                        } | null;
                        additional_cost?: number | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'activity-event';
                }
              | {
                  name?: string | null;
                  description?: string | null;
                  transport: {
                    relationTo: 'transports';
                    value: number | Transport;
                  };
                  time?: string | null;
                  changeable?: boolean | null;
                  alternatives?:
                    | {
                        relation?: {
                          relationTo: 'transports';
                          value: number | Transport;
                        } | null;
                        additional_cost?: number | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'transport-event';
                }
            )[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'itinerary-details';
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'locations';
        value: number | Location;
      } | null)
    | ({
        relationTo: 'hotels';
        value: number | Hotel;
      } | null)
    | ({
        relationTo: 'tour-highlights';
        value: number | TourHighlight;
      } | null)
    | ({
        relationTo: 'tour-themes';
        value: number | TourTheme;
      } | null)
    | ({
        relationTo: 'tours';
        value: number | Tour;
      } | null)
    | ({
        relationTo: 'activities';
        value: number | Activity;
      } | null)
    | ({
        relationTo: 'transports';
        value: number | Transport;
      } | null)
    | ({
        relationTo: 'tour-itineraries';
        value: number | TourItinerary;
      } | null)
    | ({
        relationTo: 'hotel-facilities';
        value: number | HotelFacility;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "locations_select".
 */
export interface LocationsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  parent?: T;
  media?: T;
  thumbnail?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hotels_select".
 */
export interface HotelsSelect<T extends boolean = true> {
  name?: T;
  location?: T;
  address?: T;
  description?: T;
  category?: T;
  facilities?: T;
  media?: T;
  thumbnail?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tour-highlights_select".
 */
export interface TourHighlightsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  icon?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tour-themes_select".
 */
export interface TourThemesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tours_select".
 */
export interface ToursSelect<T extends boolean = true> {
  name?: T;
  customizable?: T;
  summary?: T;
  description?: T;
  themes?: T;
  locations?: T;
  duration_nights?: T;
  visa_included?: T;
  visa_price?: T;
  currency?: T;
  base_price_child?: T;
  base_price_adult?: T;
  price_range?: T;
  availability_start?: T;
  availability_end?: T;
  flight_included?: T;
  'tour-highlights'?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "activities_select".
 */
export interface ActivitiesSelect<T extends boolean = true> {
  name?: T;
  summary?: T;
  description?: T;
  location?: T;
  type?: T;
  duration?: T;
  suitable_for?: T;
  media?: T;
  thumbnail?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "transports_select".
 */
export interface TransportsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  media?: T;
  thumbnail?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tour-itineraries_select".
 */
export interface TourItinerariesSelect<T extends boolean = true> {
  tour?: T;
  itinerary?:
    | T
    | {
        'itinerary-details'?:
          | T
          | {
              day?: T;
              name?: T;
              description?: T;
              events?:
                | T
                | {
                    'flight-event'?:
                      | T
                      | {
                          operator?: T;
                          departure_time?: T;
                          arrival_time?: T;
                          next_day_arrival?: T;
                          check_baggage_allowance?: T;
                          hand_baggage_allowance?: T;
                          id?: T;
                          blockName?: T;
                        };
                    'hotel-event'?:
                      | T
                      | {
                          name?: T;
                          description?: T;
                          hotel?: T;
                          type?: T;
                          time?: T;
                          changeable?: T;
                          alternatives?:
                            | T
                            | {
                                relation?: T;
                                additional_cost?: T;
                                id?: T;
                              };
                          id?: T;
                          blockName?: T;
                        };
                    'activity-event'?:
                      | T
                      | {
                          name?: T;
                          description?: T;
                          activity?: T;
                          time?: T;
                          duration?: T;
                          changeable?: T;
                          alternatives?:
                            | T
                            | {
                                relation?: T;
                                additional_cost?: T;
                                id?: T;
                              };
                          id?: T;
                          blockName?: T;
                        };
                    'transport-event'?:
                      | T
                      | {
                          name?: T;
                          description?: T;
                          transport?: T;
                          time?: T;
                          changeable?: T;
                          alternatives?:
                            | T
                            | {
                                relation?: T;
                                additional_cost?: T;
                                id?: T;
                              };
                          id?: T;
                          blockName?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "hotel-facilities_select".
 */
export interface HotelFacilitiesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  icon?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}